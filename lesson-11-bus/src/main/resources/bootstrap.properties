#应用端口
server.port=8889
#应用(服务)名称
spring.application.name=config-client
spring.cloud.config.label=master
spring.cloud.config.profile=dev
#spring.cloud.config.uri= http://localhost:8888/
#在读取配置文件不再写ip地址，而是服务名，这时如果配置服务部署多份，通过负载均衡，从而高可用。
# 开启Config服务发现支持
spring.cloud.config.discovery.enabled=true
# Eureka上注册的服务名
spring.cloud.config.discovery.serviceId=config-server
# 指定服务发现中心
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

#经过测试，此处客户端只能是bootstrap.properties,否则会一直连端口8888(自己可以通过启动日志查看)Discovery Client initialized at timestamp 1521443350327 with initial instances count: 1
management.security.enabled=false
#############改造lesso-10-config-client，实现实时自动化获取配置

#bus-rabbitmq
#spring.rabbitmq.host=mybroker.com
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=user
#spring.rabbitmq.password=secret

#bus-kafka
#Kafka的服务端列表，默认localhost
spring.cloud.stream.kafka.binder.brokers=tencent:9092
#Kafka服务端的默认端口，当brokers属性中没有配置端口信息时，就会使用这个默认端口，默认9092
spring.cloud.stream.kafka.binder.defaultBrokerPort=9092
#Kafka服务端连接的ZooKeeper节点列表，默认localhost
spring.cloud.stream.kafka.binder.zkNodes=tencent:2181
#ZooKeeper节点的默认端口，当zkNodes属性中没有配置端口信息时，就会使用这个默认端口，默认2181
spring.cloud.stream.kafka.binder.defaultZkPort=2181

